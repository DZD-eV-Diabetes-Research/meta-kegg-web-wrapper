{"openapi": "3.1.0", "info": {"title": "MetaKegg REST API", "version": "0.0.0"}, "paths": {"/pipeline": {"post": {"tags": ["Pipeline"], "summary": "Start Meta Kegg Pipeline Run", "description": "Trigger a meta Kegg pipeline run. The pipeline-run will not start immediatily but be queued. The response of this endpoint will be a ticket that can be used to track the status of your pipeline run.", "operationId": "start_meta_kegg_pipeline_run_pipeline_post", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_start_meta_kegg_pipeline_run_pipeline_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PipelineRunTicket"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/pipeline/{pipeline_ticket_id}/status": {"get": {"tags": ["Pipeline"], "summary": "Get Pipeline Run Status", "description": "Check the status of a triggered pipeline run.", "operationId": "get_pipeline_run_status_pipeline__pipeline_ticket_id__status_get", "parameters": [{"name": "pipeline_ticket_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Pipeline Ticket Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PipelineRunStatus"}}}}, "404": {"description": "Pipeline-run could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/mekeweserver__routes__Error__1"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/pipeline/{pipeline_ticket_id}/result": {"get": {"tags": ["Pipeline"], "summary": "Download Pipeline Run Result", "description": "Download the result of a succeded pipeline run.", "operationId": "download_pipeline_run_result_pipeline__pipeline_ticket_id__result_get", "parameters": [{"name": "pipeline_ticket_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Pipeline Ticket Id"}}], "responses": {"200": {"description": "Successful Response"}, "404": {"description": "Pipeline-run could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/mekeweserver__routes__Error__2"}}}}, "410": {"description": "Pipeline-run expired and result is cleaned.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/mekeweserver__routes__Error__3"}}}}, "425": {"description": "Pipeline-run is not finished.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/mekeweserver__routes__Error__4"}}}}, "424": {"description": "Pipeline-run failed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/mekeweserver__routes__Error__5"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/{path_name}": {"get": {"tags": ["Webclient"], "summary": "Serve Frontend", "description": "Client serving path", "operationId": "serve_frontend__path_name__get", "parameters": [{"name": "path_name", "in": "path", "required": true, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Path Name"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"Body_start_meta_kegg_pipeline_run_pipeline_post": {"properties": {"file": {"type": "string", "format": "binary", "title": "File"}, "pipeline_params": {"$ref": "#/components/schemas/PipelineInputParams"}}, "type": "object", "required": ["file"], "title": "Body_start_meta_kegg_pipeline_run_pipeline_post"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "PipelineInputParams": {"properties": {"sheet_name_paths": {"type": "string", "title": "Sheet Name Paths", "description": "Sheet name containing pathway information.", "default": "pathways"}, "sheet_name_genes": {"type": "string", "title": "Sheet Name Genes", "description": " Sheet name containing gene information"}, "genes_column": {"type": "string", "title": "Genes Column", "description": " Column name for genes in in the sheet_name_genes"}, "log2fc_column": {"type": "string", "title": "Log2Fc Column", "description": " Column name for log2 fold change in in the sheet_name_genes"}, "analysis_type": {"type": "integer", "title": "Analysis Type", "description": " Type of analysis to be performed"}, "input_label": {"anyOf": [{"type": "string"}, {"items": {}, "type": "array"}], "title": "Input Label", "description": " Label or list of labels for the input files"}, "methylation_path": {"type": "string", "title": "Methylation Path", "description": " Path to the methylation file"}, "methylation_pvalue": {"type": "string", "title": "Methylation Pvalue", "description": " Column name for p-value in methylation file"}, "methylation_genes": {"type": "string", "title": "Methylation Genes", "description": " Column name for genes in methylation file"}, "methylation_pvalue_thresh": {"type": "number", "title": "Methylation Pvalue Thresh", "description": " Threshold for methylation p-value"}, "miRNA_path": {"type": "string", "title": "Mirna Path", "description": " Path to the miRNA file"}, "miRNA_pvalue": {"type": "string", "title": "Mirna Pvalue", "description": " Column name for p-value in miRNA file"}, "miRNA_genes": {"type": "string", "title": "Mirna Genes", "description": " Column name for genes in miRNA file"}, "miRNA_pvalue_thresh": {"type": "number", "title": "Mirna Pvalue Thresh", "description": " Threshold for miRNA p-value"}, "folder_extension": {"type": "string", "title": "Folder Extension", "description": " Extension for the output folder"}}, "type": "object", "required": ["sheet_name_genes", "genes_column", "log2fc_column", "analysis_type", "input_label", "methylation_path", "methylation_pvalue", "methylation_genes", "methylation_pvalue_thresh", "miRNA_path", "miRNA_pvalue", "miRNA_genes", "miRNA_pvalue_thresh", "folder_extension"], "title": "PipelineInputParams"}, "PipelineRunStatus": {"properties": {"ticket_id": {"type": "string", "format": "uuid", "title": "Ticket Id"}, "state": {"type": "string", "enum": ["queued", "running", "failed", "success", "expired"], "title": "State", "description": "When a new pipeline run is started it will be `queued` first. After there is slot free in the background worker it start `running`. based on the failure or success of this run the state will be `failed` or `success`. The result of a pipeline run will be cleaned/deleted after 240 minutes and not be available anymore. After that the state will be `expired`", "default": "queued"}, "place_in_queue": {"type": "integer", "title": "Place In Queue", "description": "Shows how many pipeline runs are ahead of a queued pipeline-run"}, "error": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error", "description": "If the state of a pipeline run is `failed`, the error message will be logged into this attribute"}, "result_path": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Result Path", "description": "If the state of a pipeline run is `success`, the result can be downloaded from this path."}}, "type": "object", "required": ["ticket_id"], "title": "PipelineRunStatus"}, "PipelineRunTicket": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}}, "type": "object", "title": "PipelineRunTicket"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}, "mekeweserver__routes__Error__1": {"properties": {"detail": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Detail", "default": "Pipeline-run could not be found."}}, "type": "object", "title": "Error"}, "mekeweserver__routes__Error__2": {"properties": {"detail": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Detail", "default": "Pipeline-run could not be found."}}, "type": "object", "title": "Error"}, "mekeweserver__routes__Error__3": {"properties": {"detail": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Detail", "default": "Pipeline-run expired and result is cleaned."}}, "type": "object", "title": "Error"}, "mekeweserver__routes__Error__4": {"properties": {"detail": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Detail", "default": "Pipeline-run is not finished."}}, "type": "object", "title": "Error"}, "mekeweserver__routes__Error__5": {"properties": {"detail": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Detail", "default": "Pipeline-run failed."}}, "type": "object", "title": "Error"}}}}